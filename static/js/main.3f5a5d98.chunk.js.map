{"version":3,"sources":["components/Results.module.css","images/white-arrow.ico","components/LangSelection.js","components/MicButton.js","components/InputForm.js","hooks/useMic.js","images/title.png","components/Main.js","images/basicloader.gif","components/Results.js","api/TranslatorAPI.js","hooks/useTranslator.js","App.js","reportWebVitals.js","index.js","components/Main.module.css"],"names":["module","exports","LangSelection","onSelectionChange","styles","options","value","label","className","onChange","e","defaultValue","src","arrowIcon","alt","Microphone","onMicClick","browserSupportsSpeechRecognition","onClick","InputForm","onFormSubmit","onInputChange","onMicClickHandler","resetTranscript","isMicOn","transcript","userInput","listening","onSubmit","id","type","name","MicButton","useMic","updateTranslation","listeningLanguage","setTranslatedText","setTransliteratedText","useState","setIsMicOn","useSpeechRecognition","a","SpeechRecognition","stopListening","abortListening","startListening","language","useEffect","changeInput","Main","main","titleImg","Results","isLoading","translatedText","transliteratedText","translationResult","isLoadingImg","results","results__container","TranslatorAPI","tolanguage","method","url","params","to","profanityAction","textType","headers","data","Text","axios","request","result","text","fromLanguage","toLanguage","langScripts","ko","ja","es","en","fr","console","log","toScript","fromScript","this","then","response","catch","error","useTranslator","setIsLoading","setFromLanguage","setToLanguage","setUserInput","getTranslation","textInput","translate","translatedData","translations","getTransliteration","transliterate","transliteratedData","newInput","target","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f5a5d98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__1-GjU\",\"results__container\":\"Results_results__container__3kGzV\"};","export default __webpack_public_path__ + \"static/media/white-arrow.ecf0da65.ico\";","import Select from 'react-select'\nimport arrowIcon from '../images/white-arrow.ico'\n\nconst LangSelection = ({ onSelectionChange, styles }) => {\n  const options = [\n    { value: 'ko', label: 'Korean' },\n    { value: 'en', label: 'English' },\n    { value: 'fr', label: 'French' },\n    { value: 'ja', label: 'Japanese' },\n    { value: 'zh-Hans', label: 'Chinese' },\n    { value: 'es', label: 'Spanish' },\n  ]\n  function onFromSelectionChangeHandler(e) {\n    onSelectionChange(e, 'from')\n  }\n  function onToSelectionChangeHandler(e) {\n    onSelectionChange(e, 'to')\n  }\n\n  return (\n    <div className={styles['lang-selection']}>\n      <Select\n        onChange={onFromSelectionChangeHandler}\n        options={options}\n        defaultValue={options[0]}\n      />\n      <img src={arrowIcon} alt=\"white-arrow\" />\n      <Select\n        onChange={onToSelectionChangeHandler}\n        options={options}\n        defaultValue={options[1]}\n      />\n    </div>\n  )\n}\n\nexport default LangSelection\n","import React from 'react'\n\nconst Microphone = ({ onMicClick, browserSupportsSpeechRecognition }) => {\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>\n  }\n  return (\n    <button className=\"btn btn-light\" onClick={onMicClick}>\n      Mic\n    </button>\n  )\n}\n\nexport default Microphone\n","import React from 'react'\nimport MicButton from './MicButton'\n\nconst InputForm = ({\n  onFormSubmit,\n  onInputChange,\n  onMicClickHandler,\n  resetTranscript,\n  isMicOn,\n  transcript,\n  userInput,\n  listening,\n  browserSupportsSpeechRecognition,\n  styles,\n}) => {\n  return (\n    <form onSubmit={onFormSubmit}>\n      <input\n        id=\"text-input\"\n        type=\"text\"\n        name=\"input\"\n        value={isMicOn ? transcript : userInput}\n        onChange={onInputChange}\n      ></input>\n      <br />\n      <div className={styles['btn-container']}>\n        <button\n          className={`btn btn-light ${styles['translate-btn']}`}\n          type=\"submit\"\n        >\n          translate\n        </button>\n        <MicButton\n          onMicClick={onMicClickHandler}\n          resetTranscript={resetTranscript}\n          listening={listening}\n          browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n        />\n      </div>\n    </form>\n  )\n}\nexport default InputForm\n","import React, { useState, useEffect } from 'react'\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition'\nconst useMic = (\n  updateTranslation,\n  onInputChange,\n  listeningLanguage,\n  setTranslatedText,\n  setTransliteratedText,\n) => {\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  const {\n    resetTranscript,\n    transcript,\n    listening,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition()\n\n  useEffect(() => {\n    if (!listening) {\n      setIsMicOn(false)\n      if (transcript !== '') {\n        updateTranslation()\n      }\n    }\n  }, [listening])\n  useEffect(() => {\n    async function changeInput() {\n      await onInputChange(null, transcript)\n    }\n    changeInput()\n  }, [transcript])\n\n  async function onMicClickHandler(e) {\n    setTranslatedText('')\n    setTransliteratedText('')\n    // start recording\n    if (!isMicOn) {\n      setIsMicOn(true)\n      SpeechRecognition.startListening({ language: listeningLanguage })\n    } else {\n      // stop recording\n      SpeechRecognition.stopListening()\n      SpeechRecognition.abortListening()\n      updateTranslation()\n      resetTranscript()\n      setIsMicOn(false)\n    }\n  }\n\n  return {\n    onMicClickHandler,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    isMicOn,\n    transcript,\n    listening,\n  }\n}\n\nexport default useMic\n","export default __webpack_public_path__ + \"static/media/title.edd73a80.png\";","import React from 'react'\n\nimport LangSelection from './LangSelection'\nimport InputForm from './InputForm'\n\nimport useMic from '../hooks/useMic'\n\nimport styles from './Main.module.css'\nimport titleImg from '../images/title.png'\nconst Main = ({\n  userInput,\n  onInputChange,\n  onFormSubmit,\n  onSelectionChange,\n  updateTranslation,\n  setTranslatedText,\n  setTransliteratedText,\n  listeningLanguage,\n}) => {\n  const {\n    onMicClickHandler,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    isMicOn,\n    transcript,\n    listening,\n  } = useMic(\n    updateTranslation,\n    onInputChange,\n    listeningLanguage,\n    setTranslatedText,\n    setTransliteratedText,\n  )\n\n  return (\n    <div className={styles.main}>\n      <img className={styles['title-img']} src={titleImg} alt=\"title\" />\n\n      <LangSelection onSelectionChange={onSelectionChange} styles={styles} />\n      <InputForm\n        onFormSubmit={onFormSubmit}\n        onInputChange={onInputChange}\n        onMicClickHandler={onMicClickHandler}\n        resetTranscript={resetTranscript}\n        userInput={userInput}\n        transcript={transcript}\n        isMicOn={isMicOn}\n        listening={listening}\n        browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n        styles={styles}\n      ></InputForm>\n    </div>\n  )\n}\n\nexport default Main\n","export default __webpack_public_path__ + \"static/media/basicloader.5dd6d913.gif\";","import React from 'react'\nimport styles from './Results.module.css'\nimport isLoadingImg from '../images/basicloader.gif'\n\nconst Results = ({ isLoading, translatedText, transliteratedText }) => {\n  const translationResult = isLoading ? (\n    <img src={isLoadingImg} alt=\"isLoading\" />\n  ) : (\n    <>\n      <p>{translatedText} </p>\n      <br />\n      <p>{transliteratedText}</p>\n    </>\n  )\n  return (\n    <div className={styles.results}>\n      <div className={styles.results__container}>{translationResult}</div>\n    </div>\n  )\n}\n\nexport default Results\n","import axios from 'axios'\n\nclass TranslatorAPI {\n  static async translate(userInput, tolanguage) {\n    const options = {\n      method: 'POST',\n      url: 'https://microsoft-translator-text.p.rapidapi.com/translate',\n      params: {\n        to: tolanguage,\n        'api-version': '3.0',\n        profanityAction: 'NoAction',\n        textType: 'plain',\n      },\n      headers: {\n        'content-type': 'application/json',\n        'x-rapidapi-host': 'microsoft-translator-text.p.rapidapi.com',\n        'x-rapidapi-key': 'bb7c540eafmsh899ae8ebf5b34fbp14f87bjsn2c5edbb60724',\n      },\n      data: [{ Text: userInput }],\n    }\n    const result = (await axios.request(options)).data\n    return result\n  }\n  static async transliterate(text, fromLanguage, toLanguage) {\n    const langScripts = {\n      ko: 'Kore',\n      ja: 'Jpan',\n      es: 'Latn',\n      en: 'Latn',\n      fr: 'Latn',\n      'zh-Hans': 'Hans',\n    }\n    if (langScripts[toLanguage] === 'Latn') {\n      console.log('latn')\n      return ''\n    } else if (langScripts[fromLanguage] === langScripts[toLanguage]) {\n      console.log('===')\n      return ''\n    } else {\n      console.log('X')\n      var options = {\n        method: 'POST',\n        url: 'https://microsoft-translator-text.p.rapidapi.com/transliterate',\n        params: {\n          'api-version': '3.0',\n          toScript: langScripts[fromLanguage],\n          fromScript: langScripts[toLanguage],\n          language: toLanguage,\n        },\n        headers: {\n          'content-type': 'application/json',\n          'x-rapidapi-host': 'microsoft-translator-text.p.rapidapi.com',\n          'x-rapidapi-key':\n            'bb7c540eafmsh899ae8ebf5b34fbp14f87bjsn2c5edbb60724',\n        },\n        data: [{ Text: text }],\n      }\n\n      const result = (await axios.request(options)).data[0].text\n      return result\n    }\n  }\n\n  static breakSentence(userInput) {\n    this.options.data = [\n      { Text: 'How are you? I am fine. What did you do today?' },\n    ]\n    axios\n      .then(function (response) {\n        return response.data\n      })\n      .catch(function (error) {\n        console.error(error)\n      })\n  }\n}\n\nexport default TranslatorAPI\n","import TranslatorAPI from '../api/TranslatorAPI'\nimport React, { useState } from 'react'\n\nconst useTranslator = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [fromLanguage, setFromLanguage] = useState('ko')\n  const [toLanguage, setToLanguage] = useState('en')\n  const [userInput, setUserInput] = useState('')\n  const [translatedText, setTranslatedText] = useState('')\n  const [transliteratedText, setTransliteratedText] = useState('')\n\n  //#region helpersZ\n  async function getTranslation(textInput) {\n    setIsLoading(true)\n\n    const translatedData = (\n      await TranslatorAPI.translate(textInput, toLanguage)\n    )[0].translations[0].text\n\n    return translatedData\n  }\n  async function getTransliteration(translatedData) {\n    const transliteratedData = await TranslatorAPI.transliterate(\n      translatedData,\n      fromLanguage,\n      toLanguage,\n    )\n    return transliteratedData\n  }\n\n  //#endregion\n  async function updateTranslation() {\n    const translatedData = await getTranslation(userInput)\n    const transliteratedData = await getTransliteration(translatedData)\n    console.log(translatedData)\n    console.log(transliteratedData)\n    setIsLoading(false)\n    setTranslatedText(translatedData)\n    setTransliteratedText(transliteratedData)\n  }\n\n  //#region handlers\n  async function onInputChange(e = null, transcript = null) {\n    setTransliteratedText('')\n    setTranslatedText('')\n\n    if (transcript) {\n      setUserInput(transcript)\n    } else {\n      if (e !== null) {\n        const newInput = e.target.value\n        setUserInput(newInput)\n      }\n    }\n  }\n  async function onFormSubmit(e = null) {\n    if (e) {\n      e.preventDefault()\n    }\n\n    updateTranslation(userInput)\n  }\n\n  function onSelectionChange(e, type) {\n    setTranslatedText('')\n    setTransliteratedText('')\n    if (type === 'from') {\n      setFromLanguage(e.value)\n    } else if (type === 'to') {\n      setToLanguage(e.value)\n    }\n  }\n\n  //#endregion\n\n  return {\n    onInputChange,\n    onFormSubmit,\n    onSelectionChange,\n    updateTranslation,\n    setTranslatedText,\n    setTransliteratedText,\n    isLoading,\n    fromLanguage,\n    toLanguage,\n    userInput,\n    translatedText,\n    transliteratedText,\n  }\n}\n\nexport default useTranslator\n","import './App.css'\nimport Main from './components/Main'\nimport Results from './components/Results'\nimport useTranslator from './hooks/useTranslator'\n\nfunction App() {\n  const {\n    onInputChange,\n    onFormSubmit,\n    onSelectionChange,\n    updateTranslation,\n    setTranslatedText,\n    setTransliteratedText,\n    isLoading,\n    userInput,\n    fromLanguage,\n    translatedText,\n    transliteratedText,\n  } = useTranslator()\n\n  return (\n    <div className=\"App\">\n      <Main\n        userInput={userInput}\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        onSelectionChange={onSelectionChange}\n        updateTranslation={updateTranslation}\n        setTranslatedText={setTranslatedText}\n        setTransliteratedText={setTransliteratedText}\n        listeningLanguage={fromLanguage}\n      />\n      <Results\n        isLoading={isLoading}\n        translatedText={translatedText}\n        transliteratedText={transliteratedText}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__d0wD2\",\"title-img\":\"Main_title-img__3iFfP\",\"btn-container\":\"Main_btn-container__1kbbn\",\"lang-selection\":\"Main_lang-selection__ZX_Am\"};"],"sourceRoot":""}