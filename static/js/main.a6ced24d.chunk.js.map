{"version":3,"sources":["components/Main.module.css","components/Results.module.css","components/MicButton.js","components/LangSelection.js","hooks/useMic.js","api/TranslatorAPI.js","hooks/useTranslator.js","components/Main.js","images/basicloader.gif","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Microphone","onMicClick","browserSupportsSpeechRecognition","className","onClick","LangSelection","onSelectionChange","options","value","label","onChange","e","defaultValue","useMic","updateTranslation","onInputChange","listeningLanguage","setTranslatedText","setTransliteratedText","useState","isMicOn","setIsMicOn","useSpeechRecognition","resetTranscript","transcript","listening","a","SpeechRecognition","stopListening","abortListening","startListening","language","useEffect","changeInput","onMicClickHandler","TranslatorAPI","userInput","tolanguage","method","url","params","to","profanityAction","textType","headers","data","Text","axios","request","result","text","fromLanguage","toLanguage","langScripts","ko","ja","es","en","fr","console","log","toScript","fromScript","this","then","response","catch","error","useTranslator","isLoading","setIsLoading","setFromLanguage","setToLanguage","setUserInput","translatedText","transliteratedText","getTranslation","textInput","translate","translatedData","translations","getTransliteration","transliterate","transliteratedData","newInput","target","preventDefault","onFormSubmit","type","Main","styles","main","onSubmit","id","name","MicButton","Results","translationResult","src","isLoadingImg","alt","results","results__container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,gBAAgB,8B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,mBAAqB,sC,0ICY3DC,EAXI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,WACpB,OADuE,EAAvCC,iCAK9B,wBAAQC,UAAU,gBAAgBC,QAASH,EAA3C,iBAHO,gF,wBC8BII,EAhCO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBACjBC,EAAU,CACd,CAAEC,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,YACtB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,KAAMC,MAAO,YASxB,OACE,qCACE,cAAC,IAAD,CACEC,SAVN,SAAsCC,GACpCL,EAAkBK,EAAG,SAUjBJ,QAASA,EACTK,aAAcL,EAAQ,KAExB,cAAC,IAAD,CACEG,SAZN,SAAoCC,GAClCL,EAAkBK,EAAG,OAYjBJ,QAASA,EACTK,aAAcL,EAAQ,S,+CCkCfM,EA1DA,SACbC,EACAC,EACAC,EACAC,EACAC,GAEA,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAKIC,iCAJFC,EADF,EACEA,gBACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,UACAvB,EAJF,EAIEA,iCAPC,4CAyBH,WAAiCS,GAAjC,SAAAe,EAAA,sDACET,EAAkB,IAClBC,EAAsB,IAEjBE,GAKHO,IAAkBC,gBAClBD,IAAkBE,iBAClBf,IACAS,IACAF,GAAW,KARXA,GAAW,GACXM,IAAkBG,eAAe,CAAEC,SAAUf,KANjD,4CAzBG,sBA0CH,OAhCAgB,qBAAU,WACHP,IACHJ,GAAW,GACQ,KAAfG,GACFV,OAGH,CAACW,IACJO,qBAAU,WAAM,4CACd,sBAAAN,EAAA,sEACQX,EAAc,KAAMS,GAD5B,4CADc,uBAAC,WAAD,wBAIdS,KACC,CAACT,IAmBG,CACLU,kBA3CC,4CA4CDX,kBACArB,mCACAkB,UACAI,aACAC,c,iCCxDEU,E,qIACJ,WAAuBC,EAAWC,GAAlC,gFACQ9B,EAAU,CACd+B,OAAQ,OACRC,IAAK,6DACLC,OAAQ,CACNC,GAAIJ,EACJ,cAAe,MACfK,gBAAiB,WACjBC,SAAU,SAEZC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,2CACnB,iBAAkB,sDAEpBC,KAAM,CAAC,CAAEC,KAAMV,KAfnB,SAiBwBW,IAAMC,QAAQzC,GAjBtC,cAiBQ0C,EAjBR,OAiBgDJ,KAjBhD,kBAkBSI,GAlBT,2C,2HAoBA,WAA2BC,EAAMC,EAAcC,GAA/C,8EASkC,UAR1BC,EAAc,CAClBC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJ,UAAW,SAEGN,GATlB,uBAUIO,QAAQC,IAAI,QAVhB,kBAWW,IAXX,UAYaP,EAAYF,KAAkBE,EAAYD,GAZvD,wBAaIO,QAAQC,IAAI,OAbhB,kBAcW,IAdX,eAgBID,QAAQC,IAAI,KACRrD,EAAU,CACZ+B,OAAQ,OACRC,IAAK,iEACLC,OAAQ,CACN,cAAe,MACfqB,SAAUR,EAAYF,GACtBW,WAAYT,EAAYD,GACxBrB,SAAUqB,GAEZR,QAAS,CACP,eAAgB,mBAChB,kBAAmB,2CACnB,iBACE,sDAEJC,KAAM,CAAC,CAAEC,KAAMI,KAhCrB,UAmC0BH,IAAMC,QAAQzC,GAnCxC,eAmCU0C,EAnCV,OAmCkDJ,KAAK,GAAGK,KAnC1D,kBAoCWD,GApCX,4C,sFAwCA,SAAqBb,GACnB2B,KAAKxD,QAAQsC,KAAO,CAClB,CAAEC,KAAM,mDAEVC,IACGiB,MAAK,SAAUC,GACd,OAAOA,EAASpB,QAEjBqB,OAAM,SAAUC,GACfR,QAAQQ,MAAMA,U,KAKPhC,ICcAiC,EAxFO,WACpB,MAAkCjD,oBAAS,GAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KACA,EAAwCnD,mBAAS,MAAjD,mBAAOgC,EAAP,KAAqBoB,EAArB,KACA,EAAoCpD,mBAAS,MAA7C,mBAAOiC,EAAP,KAAmBoB,EAAnB,KACA,EAAkCrD,mBAAS,IAA3C,mBAAOiB,EAAP,KAAkBqC,EAAlB,KACA,EAA4CtD,mBAAS,IAArD,mBAAOuD,EAAP,KAAuBzD,EAAvB,KACA,EAAoDE,mBAAS,IAA7D,mBAAOwD,EAAP,KAA2BzD,EAA3B,KAN0B,SASX0D,EATW,8EAS1B,WAA8BC,GAA9B,eAAAnD,EAAA,6DACE4C,GAAa,GADf,SAIUnC,EAAc2C,UAAUD,EAAWzB,GAJ7C,cAGQ2B,EAHR,OAKI,GAAGC,aAAa,GAAG9B,KALvB,kBAOS6B,GAPT,4CAT0B,+BAkBXE,EAlBW,8EAkB1B,WAAkCF,GAAlC,eAAArD,EAAA,sEACmCS,EAAc+C,cAC7CH,EACA5B,EACAC,GAJJ,cACQ+B,EADR,yBAMSA,GANT,4CAlB0B,+BA4BXrE,IA5BW,2EA4B1B,8BAAAY,EAAA,sEAC+BkD,EAAexC,GAD9C,cACQ2C,EADR,gBAEmCE,EAAmBF,GAFtD,OAEQI,EAFR,OAGExB,QAAQC,IAAImB,GACZpB,QAAQC,IAAIuB,GACZb,GAAa,GACbrD,EAAkB8D,GAClB7D,EAAsBiE,GAPxB,6CA5B0B,kEAuC1B,4CAAAzD,EAAA,sDAA6Bf,EAA7B,+BAAiC,KAAMa,EAAvC,+BAAoD,KAClDN,EAAsB,IACtBD,EAAkB,IAEdO,EACFiD,EAAajD,GAEH,OAANb,IACIyE,EAAWzE,EAAE0E,OAAO7E,MAC1BiE,EAAaW,IATnB,2CAvC0B,oEAoD1B,wCAAA1D,EAAA,uDAA4Bf,EAA5B,+BAAgC,OAE5BA,EAAE2E,iBAGJxE,EAAkBsB,GALpB,2CApD0B,wBAwE1B,MAAO,CACLrB,cAzEwB,2CA0ExBwE,aA1EwB,2CA2ExBjF,kBAfF,SAA2BK,EAAG6E,GAC5BvE,EAAkB,IAClBC,EAAsB,IACT,SAATsE,EACFjB,EAAgB5D,EAAEH,OACA,OAATgF,GACThB,EAAc7D,EAAEH,QAUlBM,oBACAG,oBACAC,wBACAmD,YACAlB,eACAC,aACAhB,YACAsC,iBACAC,uBCtBWc,EAxDF,SAAC,GASP,IARLrD,EAQI,EARJA,UACArB,EAOI,EAPJA,cACAwE,EAMI,EANJA,aACAjF,EAKI,EALJA,kBACAQ,EAII,EAJJA,kBACAG,EAGI,EAHJA,kBACAC,EAEI,EAFJA,sBACAF,EACI,EADJA,kBAEA,EAOIH,EACFC,EACAC,EACAC,EACAC,EACAC,GAXAgB,EADF,EACEA,kBACAX,EAFF,EAEEA,gBACArB,EAHF,EAGEA,iCACAkB,EAJF,EAIEA,QACAI,EALF,EAKEA,WACAC,EANF,EAMEA,UASF,OACE,sBAAKtB,UAAWuF,IAAOC,KAAvB,UACE,cAAC,EAAD,CAAerF,kBAAmBA,IAClC,uBAAMsF,SAAUL,EAAhB,UACE,uBACEM,GAAG,aACHL,KAAK,OACLM,KAAK,QACLtF,MAAOY,EAAUI,EAAaY,EAC9B1B,SAAUK,IAEZ,uBACA,sBAAKZ,UAAWuF,IAAO,iBAAvB,UACE,wBACEvF,UAAS,wBAAmBuF,IAAO,kBACnCF,KAAK,SAFP,uBAMA,cAACO,EAAD,CACE9F,WAAYiC,EACZX,gBAAiBA,EACjBE,UAAWA,EACXvB,iCAAkCA,c,iBCzD/B,MAA0B,wCCqB1B8F,EAjBC,SAAC,GAAuD,IAArD3B,EAAoD,EAApDA,UAAWK,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,mBACtCsB,EAAoB5B,EACxB,qBAAK6B,IAAKC,EAAcC,IAAI,cAE5B,qCACE,8BAAI1B,EAAJ,OACA,uBACA,4BAAIC,OAGR,OACE,qBAAKxE,UAAWuF,IAAOW,QAAvB,SACE,qBAAKlG,UAAWuF,IAAOY,mBAAvB,SAA4CL,OCyBnCM,MApCf,WACE,MAYInC,IAXFrD,EADF,EACEA,cACAwE,EAFF,EAEEA,aACAjF,EAHF,EAGEA,kBACAQ,EAJF,EAIEA,kBACAG,EALF,EAKEA,kBACAC,EANF,EAMEA,sBACAmD,EAPF,EAOEA,UACAjC,EARF,EAQEA,UACAe,EATF,EASEA,aACAuB,EAVF,EAUEA,eACAC,EAXF,EAWEA,mBAGF,OACE,sBAAKxE,UAAU,MAAf,UACE,cAAC,EAAD,CACEiC,UAAWA,EACXrB,cAAeA,EACfwE,aAAcA,EACdjF,kBAAmBA,EACnBQ,kBAAmBA,EACnBG,kBAAmBA,EACnBC,sBAAuBA,EACvBF,kBAAmBmC,IAErB,cAAC,EAAD,CACEkB,UAAWA,EACXK,eAAgBA,EAChBC,mBAAoBA,QCvBb6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6ced24d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__d0wD2\",\"btn-container\":\"Main_btn-container__1kbbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__1-GjU\",\"results__container\":\"Results_results__container__3kGzV\"};","import React from 'react'\n\nconst Microphone = ({ onMicClick, browserSupportsSpeechRecognition }) => {\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>\n  }\n  return (\n    <button className=\"btn btn-light\" onClick={onMicClick}>\n      Mic\n    </button>\n  )\n}\n\nexport default Microphone\n","import Select from 'react-select'\n\nconst LangSelection = ({ onSelectionChange }) => {\n  const options = [\n    { value: 'ko', label: 'Korean' },\n    { value: 'en', label: 'English' },\n    { value: 'fr', label: 'French' },\n    { value: 'ja', label: 'Japanese' },\n    { value: 'zh-Hans', label: 'Chinese' },\n    { value: 'es', label: 'Spanish' },\n  ]\n  function onFromSelectionChangeHandler(e) {\n    onSelectionChange(e, 'from')\n  }\n  function onToSelectionChangeHandler(e) {\n    onSelectionChange(e, 'to')\n  }\n\n  return (\n    <>\n      <Select\n        onChange={onFromSelectionChangeHandler}\n        options={options}\n        defaultValue={options[0]}\n      />\n      <Select\n        onChange={onToSelectionChangeHandler}\n        options={options}\n        defaultValue={options[1]}\n      />\n    </>\n  )\n}\n\nexport default LangSelection\n","import React, { useState, useEffect } from 'react'\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition'\nconst useMic = (\n  updateTranslation,\n  onInputChange,\n  listeningLanguage,\n  setTranslatedText,\n  setTransliteratedText,\n) => {\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  const {\n    resetTranscript,\n    transcript,\n    listening,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition()\n\n  useEffect(() => {\n    if (!listening) {\n      setIsMicOn(false)\n      if (transcript !== '') {\n        updateTranslation()\n      }\n    }\n  }, [listening])\n  useEffect(() => {\n    async function changeInput() {\n      await onInputChange(null, transcript)\n    }\n    changeInput()\n  }, [transcript])\n\n  async function onMicClickHandler(e) {\n    setTranslatedText('')\n    setTransliteratedText('')\n    // start recording\n    if (!isMicOn) {\n      setIsMicOn(true)\n      SpeechRecognition.startListening({ language: listeningLanguage })\n    } else {\n      // stop recording\n      SpeechRecognition.stopListening()\n      SpeechRecognition.abortListening()\n      updateTranslation()\n      resetTranscript()\n      setIsMicOn(false)\n    }\n  }\n\n  return {\n    onMicClickHandler,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    isMicOn,\n    transcript,\n    listening,\n  }\n}\n\nexport default useMic\n","import axios from 'axios'\n\nclass TranslatorAPI {\n  static async translate(userInput, tolanguage) {\n    const options = {\n      method: 'POST',\n      url: 'https://microsoft-translator-text.p.rapidapi.com/translate',\n      params: {\n        to: tolanguage,\n        'api-version': '3.0',\n        profanityAction: 'NoAction',\n        textType: 'plain',\n      },\n      headers: {\n        'content-type': 'application/json',\n        'x-rapidapi-host': 'microsoft-translator-text.p.rapidapi.com',\n        'x-rapidapi-key': 'bb7c540eafmsh899ae8ebf5b34fbp14f87bjsn2c5edbb60724',\n      },\n      data: [{ Text: userInput }],\n    }\n    const result = (await axios.request(options)).data\n    return result\n  }\n  static async transliterate(text, fromLanguage, toLanguage) {\n    const langScripts = {\n      ko: 'Kore',\n      ja: 'Jpan',\n      es: 'Latn',\n      en: 'Latn',\n      fr: 'Latn',\n      'zh-Hans': 'Hans',\n    }\n    if (langScripts[toLanguage] === 'Latn') {\n      console.log('latn')\n      return ''\n    } else if (langScripts[fromLanguage] === langScripts[toLanguage]) {\n      console.log('===')\n      return ''\n    } else {\n      console.log('X')\n      var options = {\n        method: 'POST',\n        url: 'https://microsoft-translator-text.p.rapidapi.com/transliterate',\n        params: {\n          'api-version': '3.0',\n          toScript: langScripts[fromLanguage],\n          fromScript: langScripts[toLanguage],\n          language: toLanguage,\n        },\n        headers: {\n          'content-type': 'application/json',\n          'x-rapidapi-host': 'microsoft-translator-text.p.rapidapi.com',\n          'x-rapidapi-key':\n            'bb7c540eafmsh899ae8ebf5b34fbp14f87bjsn2c5edbb60724',\n        },\n        data: [{ Text: text }],\n      }\n\n      const result = (await axios.request(options)).data[0].text\n      return result\n    }\n  }\n\n  static breakSentence(userInput) {\n    this.options.data = [\n      { Text: 'How are you? I am fine. What did you do today?' },\n    ]\n    axios\n      .then(function (response) {\n        return response.data\n      })\n      .catch(function (error) {\n        console.error(error)\n      })\n  }\n}\n\nexport default TranslatorAPI\n","import TranslatorAPI from '../api/TranslatorAPI'\nimport React, { useState } from 'react'\n\nconst useTranslator = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [fromLanguage, setFromLanguage] = useState('ko')\n  const [toLanguage, setToLanguage] = useState('en')\n  const [userInput, setUserInput] = useState('')\n  const [translatedText, setTranslatedText] = useState('')\n  const [transliteratedText, setTransliteratedText] = useState('')\n\n  //#region helpersZ\n  async function getTranslation(textInput) {\n    setIsLoading(true)\n\n    const translatedData = (\n      await TranslatorAPI.translate(textInput, toLanguage)\n    )[0].translations[0].text\n\n    return translatedData\n  }\n  async function getTransliteration(translatedData) {\n    const transliteratedData = await TranslatorAPI.transliterate(\n      translatedData,\n      fromLanguage,\n      toLanguage,\n    )\n    return transliteratedData\n  }\n\n  //#endregion\n  async function updateTranslation() {\n    const translatedData = await getTranslation(userInput)\n    const transliteratedData = await getTransliteration(translatedData)\n    console.log(translatedData)\n    console.log(transliteratedData)\n    setIsLoading(false)\n    setTranslatedText(translatedData)\n    setTransliteratedText(transliteratedData)\n  }\n\n  //#region handlers\n  async function onInputChange(e = null, transcript = null) {\n    setTransliteratedText('')\n    setTranslatedText('')\n\n    if (transcript) {\n      setUserInput(transcript)\n    } else {\n      if (e !== null) {\n        const newInput = e.target.value\n        setUserInput(newInput)\n      }\n    }\n  }\n  async function onFormSubmit(e = null) {\n    if (e) {\n      e.preventDefault()\n    }\n\n    updateTranslation(userInput)\n  }\n\n  function onSelectionChange(e, type) {\n    setTranslatedText('')\n    setTransliteratedText('')\n    if (type === 'from') {\n      setFromLanguage(e.value)\n    } else if (type === 'to') {\n      setToLanguage(e.value)\n    }\n  }\n\n  //#endregion\n\n  return {\n    onInputChange,\n    onFormSubmit,\n    onSelectionChange,\n    updateTranslation,\n    setTranslatedText,\n    setTransliteratedText,\n    isLoading,\n    fromLanguage,\n    toLanguage,\n    userInput,\n    translatedText,\n    transliteratedText,\n  }\n}\n\nexport default useTranslator\n","import React, { useEffect, useState } from 'react'\nimport MicButton from './MicButton'\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition'\nimport LangSelection from './LangSelection'\nimport styles from './Main.module.css'\nimport useMic from '../hooks/useMic'\nimport useTranslator from '../hooks/useTranslator'\nconst Main = ({\n  userInput,\n  onInputChange,\n  onFormSubmit,\n  onSelectionChange,\n  updateTranslation,\n  setTranslatedText,\n  setTransliteratedText,\n  listeningLanguage,\n}) => {\n  const {\n    onMicClickHandler,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n    isMicOn,\n    transcript,\n    listening,\n  } = useMic(\n    updateTranslation,\n    onInputChange,\n    listeningLanguage,\n    setTranslatedText,\n    setTransliteratedText,\n  )\n\n  return (\n    <div className={styles.main}>\n      <LangSelection onSelectionChange={onSelectionChange} />\n      <form onSubmit={onFormSubmit}>\n        <input\n          id=\"text-input\"\n          type=\"text\"\n          name=\"input\"\n          value={isMicOn ? transcript : userInput}\n          onChange={onInputChange}\n        ></input>\n        <br />\n        <div className={styles['btn-container']}>\n          <button\n            className={`btn btn-light ${styles['translate-btn']}`}\n            type=\"submit\"\n          >\n            translate\n          </button>\n          <MicButton\n            onMicClick={onMicClickHandler}\n            resetTranscript={resetTranscript}\n            listening={listening}\n            browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Main\n","export default __webpack_public_path__ + \"static/media/basicloader.157f21ba.gif\";","import React from 'react'\nimport styles from './Results.module.css'\nimport isLoadingImg from '../images/basicloader.gif'\n\nconst Results = ({ isLoading, translatedText, transliteratedText }) => {\n  const translationResult = isLoading ? (\n    <img src={isLoadingImg} alt=\"isLoading\" />\n  ) : (\n    <>\n      <p>{translatedText} </p>\n      <br />\n      <p>{transliteratedText}</p>\n    </>\n  )\n  return (\n    <div className={styles.results}>\n      <div className={styles.results__container}>{translationResult}</div>\n    </div>\n  )\n}\n\nexport default Results\n","import './App.css'\nimport Main from './components/Main'\nimport Results from './components/Results'\nimport useTranslator from './hooks/useTranslator'\n\nfunction App() {\n  const {\n    onInputChange,\n    onFormSubmit,\n    onSelectionChange,\n    updateTranslation,\n    setTranslatedText,\n    setTransliteratedText,\n    isLoading,\n    userInput,\n    fromLanguage,\n    translatedText,\n    transliteratedText,\n  } = useTranslator()\n\n  return (\n    <div className=\"App\">\n      <Main\n        userInput={userInput}\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        onSelectionChange={onSelectionChange}\n        updateTranslation={updateTranslation}\n        setTranslatedText={setTranslatedText}\n        setTransliteratedText={setTransliteratedText}\n        listeningLanguage={fromLanguage}\n      />\n      <Results\n        isLoading={isLoading}\n        translatedText={translatedText}\n        transliteratedText={transliteratedText}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}